#!/usr/bin/env python
from __future__ import print_function
import argparse
import os

from staeon.peer_registration import register_peer
parser = argparse.ArgumentParser() #version='1.0.2')

subparsers = parser.add_subparsers(help='commands', dest="subparser_name")

x = subparsers.add_parser('register-node', help='')
x.add_argument('--domain', action='store', help='Domain of node')
x.add_argument('--pk', action='store', help='Private Key of node')
x.add_argument('--no-push', action='store', help="Don't publish to the network, just update local files")

argz = parser.parse_args()

if argz.subparser_name == 'register-node':
    if not argz.domain and not argz.pk:
        print("Either --domain or --private_key required")

    try:
        f = open("/etc/staeon-node.conf", 'r+')
        old_domain, old_pk  = [x.strip() for x in f.readlines()]
        f.close()
        os.remove("/etc/staeon-node.conf")
    except (IOError, IndexError): # file not created yet
        old_pk, old_domain = None, None

    domain = argz.domain or old_domain
    pk = argz.pk or old_pk

    if not pk:
        print("private key needed")
    if not domain:
        print("domain needed")

    f = open("/etc/staeon-node.conf", 'w')
    f.write("%s\n%s" % (domain, pk))
    f.close()

    reg = register_peer(domain, pk)

elif argz.subparser_name == 'sync':
    pass
